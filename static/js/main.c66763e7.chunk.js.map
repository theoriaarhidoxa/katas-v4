{"version":3,"sources":["helpers/Dummy.js","App.js","index.js"],"names":["Dummy","pagesLength","currentPage","className","App","useState","isLoading","setIsLoading","setCurrentPage","reqStr","setPagesLength","query","setQuery","list","setList","savedList","setSavedList","intersectionPrevent","setIntersectionPrevent","offset","setOffset","fetchMore","setFetchMore","container","useRef","bottomBlock","observer","scrollerIcon","getLastPageId","a","fetch","res","json","data","fetchData","katas","length","setTimeout","reverse","topScroller","scroll","scrollToTop","duration","delay","smooth","keyPressHandler","e","keyCode","target","value","current","classList","remove","useEffect","then","prev","IntersectionObserver","entries","isIntersecting","observe","window","addEventListener","removeEventListener","onscroll","pageYOffset","offsetHeight","screen","height","add","ref","placeholder","type","onChange","filter","el","name","toLowerCase","startsWith","map","i","id","completedAt","parsedDate","substring","indexOf","split","join","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c66763e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Dummy.scss';\r\n\r\nconst Dummy = ({pagesLength, currentPage}) => {\r\n    return (\r\n        <div className='overlay'>\r\n            <span />\r\n            {currentPage < pagesLength - 1 && <i>Загружается страница {pagesLength - currentPage}...</i>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dummy;\r\n","import './App.scss';\nimport React, {useState, useEffect, useRef} from \"react\";\nimport Dummy from \"./helpers/Dummy\";\nimport {animateScroll as scroll} from 'react-scroll'; // https://www.npmjs.com/package/react-scroll https://www.pluralsight.com/guides/scrolling-inside-a-div-in-react\n\nfunction App() {\n    const userName = `catchaser`;\n    const [isLoading, setIsLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(null);\n    const reqStr = `https://www.codewars.com/api/v1/users/${userName}/code-challenges/completed?page=${currentPage}`;\n    const [pagesLength, setPagesLength] = useState(null);\n    const [query, setQuery] = useState('');\n    const [list, setList] = useState([]);\n    const [savedList, setSavedList] = useState([]);\n    const [intersectionPrevent, setIntersectionPrevent] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [fetchMore, setFetchMore] = useState(false);\n\n    const container = useRef();\n    const bottomBlock = useRef();\n    const observer = useRef();\n    const scrollerIcon = useRef();\n\n    // ПРИ ДЕПЛОЕ поменять не только /static, но и в chunk.css - background:url(../media/loading-buffering\n\n    const getLastPageId = async () => {\n        const res = await fetch(`${reqStr}`);\n        const data = await res.json();\n        setCurrentPage(data['totalPages'] - 1);\n    };\n\n    const fetchData = async () => {\n        if (typeof currentPage === 'number' && currentPage >= 0) {\n            setIsLoading(true);\n            const res = await fetch(`${reqStr}`);\n            const katas = await res.json();\n            if (!pagesLength) {\n                setPagesLength(katas['totalPages']);\n            }\n\n            if (katas.data.length < 22) {\n                setFetchMore(true);\n            }\n\n            setTimeout(() => {\n                setIsLoading(false);\n                setList([...list, ...katas.data.reverse()]);\n                setSavedList([...savedList, ...katas.data]);\n            }, 1000);\n        }\n    };\n\n    const handleInputQuery = e => {\n        if (!e.target.value.length) {\n            setList(savedList);\n        }\n        topScroller();\n        setQuery(e.target.value);\n        setIntersectionPrevent(e.target.value.length > 0);\n        setList(savedList.filter(el => el.name.toLowerCase().startsWith(e.target.value.toLowerCase())));\n    };\n\n    const topScroller = () => {\n        scroll.scrollToTop({\n            duration: 1000,\n            delay: 0,\n            smooth: true,\n            offset: 0, // Scrolls to element + 0 pixels down the page\n        });\n    };\n\n    const keyPressHandler = e => {\n        if (!query) {\n            return;\n        }\n        const {keyCode} = e;\n        if (keyCode === 27) {\n            setQuery('');\n            setList(savedList);\n            setIntersectionPrevent(e.target.value?.length > 0);\n            scrollerIcon.current.classList.remove('invisible');\n        }\n    };\n\n\n    useEffect(() => {\n        getLastPageId().then();\n    }, []);\n\n    useEffect(() => {\n        if (intersectionPrevent) {\n            return;\n        }\n        fetchData().then();\n    }, [currentPage]);\n\n    useEffect(() => {\n        if (fetchMore && !list.length) {\n            setTimeout(() => {\n                setCurrentPage(prev => prev - 1);\n            }, 2000);\n\n        }\n    }, [fetchMore]);\n\n    useEffect(() => {\n        const callback = (entries) => {\n            if (entries[0].isIntersecting) {\n                setCurrentPage(prev => prev - 1);\n            }\n        };\n        observer.current = new IntersectionObserver(callback);\n        observer.current.observe(bottomBlock.current);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('keydown', keyPressHandler);\n        return () => window.removeEventListener('keydown', keyPressHandler);\n    }, [query]);\n\n\n    useEffect(() => {\n        // https://www.npmjs.com/package/@react-hook/window-scroll alternative?\n        window.onscroll = () => {\n            setOffset(window.pageYOffset);\n        }\n    }, [offset]);\n\n    useEffect(() => {\n        if (scrollerIcon.current) {\n            container.current.offsetHeight < window.screen.height ? scrollerIcon.current.classList.add('invisible') : scrollerIcon.current.classList.remove('invisible');\n        }\n    }, [query]);\n\n\n    return (\n        <>\n            {isLoading && <Dummy currentPage={currentPage} pagesLength={pagesLength} />}\n            <div className='wrapper' ref={container}>\n                {(!isLoading) &&\n                <p>Небольшая вариация на основе предыдущей версии - ката отсортированы в&nbsp;хронологическом порядке и добавлена очистка поля ввода по Escape.</p>}\n\n                <p className={intersectionPrevent ? 'wrapper__alert danger visible' : 'wrapper__alert'}>Динамическая\n                    подгрузка контента не работает одновременно с поиском.<br/> Перед проматыванием страницы вниз\n                    необходимо очистить поле ввода.</p>\n\n                {!isLoading && <input value={query}\n                                      className={offset > 100 && !intersectionPrevent ? 'wrapper__query floating' : 'wrapper__query'}\n                                      placeholder='Поиск по названию' type='text'\n                                      onChange={handleInputQuery}/>}\n\n                {list.length ? <div className='listWrapper'>\n                    {list.map((el, i) => {\n                        const {id, completedAt, name} = el;\n                        const parsedDate = completedAt.substring(0, completedAt.indexOf('T')).split('-').reverse().join('.');\n                        return (\n                            <div className='listWrapper__item' key={id}>\n                                <span>{i + 1}. {name}</span>\n                                <small>{parsedDate}</small>\n                            </div>\n                        )\n                    })}\n                </div> : !isLoading ? 'Поиск не дал результатов.' : null}\n\n                <div ref={bottomBlock}\n                     className={intersectionPrevent ? 'wrapper__bottomBlock inactive' : 'wrapper__bottomBlock'}/>\n                {currentPage < 0 && list.length > 0 &&\n                <p className='wrapper__alert success visible'>Все элементы списка загружены.</p>}\n                {!isLoading && <span ref={scrollerIcon} className='scrollTop' onClick={topScroller}>scroll</span>}\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}